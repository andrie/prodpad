% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pp.R
\name{.pp}
\alias{.pp}
\title{Query the Prodpad API}
\usage{
.pp(
  endpoint,
  ...,
  per_page = NULL,
  .destfile = NULL,
  .overwrite = FALSE,
  .api_url = NULL,
  .method = "GET",
  .limit = NULL,
  .accept = "application/json",
  .send_headers = NULL,
  .progress = TRUE,
  .params = list(),
  .api_version = 1,
  .unnest = !is.null(.unnest_element),
  .unnest_element = NULL,
  .unnest_dont_unlist = NULL
)
}
\arguments{
\item{endpoint}{Prodpad API endpoint. Must be one of the following forms:
\itemize{
\item \verb{METHOD path}, e.g. \code{GET /feedbacks},
\item \code{path}, e.g. \verb{/feedbacks},
\item \verb{METHOD url}, e.g. \verb{GET https://api.prodpad.com/v1/feedbacks},
\item \code{url}, e.g. \verb{https://api.prodpad.com/v1/feedbacks}.
}

If the method is not supplied, will use \code{.method}, which defaults
to \code{"GET"}.}

\item{...}{Name-value pairs giving API parameters. Will be matched into
\code{endpoint} placeholders, sent as query parameters in GET requests, and as a
JSON body of POST requests. If there is only one unnamed parameter, and it
is a raw vector, then it will not be JSON encoded, but sent as raw data, as
is. This can be used for example to add assets to releases. Named \code{NULL}
values are silently dropped. For GET requests, named \code{NA} values trigger an
error. For other methods, named \code{NA} values are included in the body of the
request, as JSON \code{null}.}

\item{per_page}{Number of items to return per page. If omitted,
will be substituted by \code{max(.limit, 100)} if \code{.limit} is set,
otherwise determined by the API (never greater than 100).}

\item{.destfile}{Path to write response to disk. If \code{NULL} (default),
response will be processed and returned as an object. If path is given,
response will be written to disk in the form sent.}

\item{.overwrite}{If \code{.destfile} is provided, whether to overwrite an
existing file.  Defaults to \code{FALSE}.}

\item{.api_url}{Prodpad API url (default: \url{https://api.prodpad.com/v1}). Used
if \code{endpoint} just contains a path. Defaults to \code{PRODPAD_API_URL}
environment variable if set.}

\item{.method}{HTTP method to use if not explicitly supplied in the
\code{endpoint}.}

\item{.limit}{Number of records to return. This can be used
instead of manual pagination. By default it is \code{NULL},
which means that the defaults of the Prodpad API are used.
You can set it to a number to request more (or less)
records, and also to \code{Inf} to request all records.
Note, that if you request many records, then multiple Prodpad
API calls are used to get them, and this can take a potentially
long time.}

\item{.accept}{The value of the \code{Accept} HTTP header. Defaults to
\verb{"application/json} . If \code{Accept} is given in
\code{.send_headers}, then that will be used. This parameter can be used to
provide a custom media type, in order to access a preview feature of
the API.}

\item{.send_headers}{Named character vector of header field values
(except \code{Authorization}, which is handled via \code{.token}). This can be
used to override or augment the default \code{User-Agent} header:
\code{"https://github.com/andrie/prodpad"}.}

\item{.progress}{Whether to show a progress indicator for calls that
need more than one HTTP request.}

\item{.params}{Additional list of parameters to append to \code{...}.
It is easier to use this than \code{...} if you have your parameters in
a list already.}

\item{.api_version}{This must be \code{1}.}

\item{.unnest}{If TRUE, unnests the result object}

\item{.unnest_element}{Name of element to extract before unnesting the result object}

\item{.unnest_dont_unlist}{Vector of columns name to ignore during the unnesting.}
}
\value{
Answer from the API as a \code{pp_response} object, which is also a
\code{list}. Failed requests will generate an R error. Requests that
generate a raw response will return a raw vector.
}
\description{
This is an extremely minimal client. You need to know the API
to be able to use this client. All this function does is:
\itemize{
\item Try to substitute each listed parameter into \code{endpoint}, using the
\code{{parameter}} notation.
\item If a GET request (the default), then add all other listed parameters
as query parameters.
\item If not a GET request, then send the other parameters in the request
body, as JSON.
\item Convert the response to an R list using \code{\link[jsonlite:fromJSON]{jsonlite::fromJSON()}}.
}
}
